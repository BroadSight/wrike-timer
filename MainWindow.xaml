<Window x:Class="wrike_timer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:wrike_timer"
        xmlns:lconv="clr-namespace:wrike_timer.Converters"
        mc:Ignorable="d"
        Title="Wrike Timer" WindowStyle="None" ShowInTaskbar="False" Topmost="True" Height="36" SizeToContent="Width" ResizeMode="NoResize" AllowsTransparency="True" Opacity="0.75">
    <Window.Resources>
        <Style x:Key="buttonContentStyle" TargetType="ContentControl">
            <Setter Property="Margin" Value="2,0" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <Style x:Key="buttonIconStyle" TargetType="Path">
            <Setter Property="Fill" Value="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}}" />
            <Setter Property="Width" Value="10" />
            <Setter Property="Height" Value="10" />
            <!--<Setter Property="Margin" Value="2,0" />-->
        </Style>
        <PathGeometry x:Key="playGeometry" Figures="m 1,0 0,10 8,-5 z" FillRule="Nonzero" />
        <PathGeometry x:Key="pauseGeometry" Figures="m 1,0 3,0 0,10 -3,0 z m 5,0 3,0 0,10 -3,0 z" FillRule="Nonzero" />
        <PathGeometry x:Key="dropdownGeometry" Figures="m 0,2 10,0 -5,6 z" FillRule="Nonzero" />
        <lconv:TruncateDoubleConverter x:Key="TruncateDoubleConverter" />
    </Window.Resources>
    <StackPanel Orientation="Horizontal" Margin="5,0">
        <StackPanel.Resources>
            <Style TargetType="Button">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="FontSize" Value="18" />
                <Setter Property="Margin" Value="3,0" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </StackPanel.Resources>
        <Grid x:Name="dragHandle" Height="12" Width="8" Margin="5,0" Background="Transparent" Cursor="SizeAll" HorizontalAlignment="Center" VerticalAlignment="Center" MouseLeftButtonDown="dragHandle_MouseLeftButtonDown">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Ellipse Height="2" Width="2" Grid.Row="0" Grid.Column="0" Fill="Black" HorizontalAlignment="Left" VerticalAlignment="Top" />
            <Ellipse Height="2" Width="2" Grid.Row="0" Grid.Column="1" Fill="Black" HorizontalAlignment="Right" VerticalAlignment="Top" />
            <Ellipse Height="2" Width="2" Grid.Row="1" Grid.Column="0" Fill="Black" HorizontalAlignment="Left" VerticalAlignment="Center" />
            <Ellipse Height="2" Width="2" Grid.Row="1" Grid.Column="1" Fill="Black" HorizontalAlignment="Right" VerticalAlignment="Center" />
            <Ellipse Height="2" Width="2" Grid.Row="2" Grid.Column="0" Fill="Black" HorizontalAlignment="Left" VerticalAlignment="Bottom" />
            <Ellipse Height="2" Width="2" Grid.Row="2" Grid.Column="1" Fill="Black" HorizontalAlignment="Right" VerticalAlignment="Bottom" />
        </Grid>
        <Button x:Name="timerToggle" FontWeight="Medium" Click="timerToggle_Click" DataContext="{Binding ActiveTimer, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}">
            <StackPanel Orientation="Horizontal">
                <StackPanel.Resources>
                    <Style TargetType="ContentControl" BasedOn="{StaticResource buttonContentStyle}" />
                </StackPanel.Resources>
                <ContentControl>
                    <Path x:Name="timerIcon">
                        <Path.Style>
                            <Style TargetType="Path" BasedOn="{StaticResource buttonIconStyle}">
                                <Setter Property="Data" Value="{StaticResource playGeometry}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsRunning, FallbackValue=False}" Value="True">
                                        <Setter Property="Data" Value="{StaticResource pauseGeometry}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Path.Style>
                    </Path>
                </ContentControl>
                <ContentControl>
                    <StackPanel Margin="2,0" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                        <TextBlock x:Name="timerHours" Text="{Binding Elapsed.TotalHours, StringFormat=0, FallbackValue=0, Converter={StaticResource TruncateDoubleConverter}}" />
                        <TextBlock x:Name="timerSeparator" Text=":">
                            <TextBlock.Style>
                                <Style>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsRunning}" Value="True">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard x:Name="blinkStoryboard">
                                                    <Storyboard FillBehavior="Stop">
                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Duration="0:0:1" RepeatBehavior="Forever">
                                                            <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1.0" />
                                                            <DiscreteDoubleKeyFrame KeyTime="0:0:0.5" Value="0.0" />
                                                        </DoubleAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.EnterActions>
                                            <DataTrigger.ExitActions>
                                                <StopStoryboard BeginStoryboardName="blinkStoryboard" />
                                            </DataTrigger.ExitActions>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <TextBlock x:Name="timerMinutes" Text="{Binding Elapsed.Minutes, StringFormat=00, FallbackValue=00}" />
                    </StackPanel>
                </ContentControl>
            </StackPanel>
        </Button>
        <Button x:Name="taskSelector">
            <StackPanel Orientation="Horizontal" Height="{Binding Height, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}">
                <StackPanel.Resources>
                    <Style TargetType="ContentControl" BasedOn="{StaticResource buttonContentStyle}" />
                </StackPanel.Resources>
                <ContentControl>
                    <TextBlock x:Name="taskName" Text="General 2019-06-01" />
                </ContentControl>
                <ContentControl>
                    <Path VerticalAlignment="Center" Data="{StaticResource dropdownGeometry}" Style="{StaticResource buttonIconStyle}" />
                </ContentControl>
                <Popup x:Name="taskListPopup" AllowsTransparency="True" StaysOpen="False">
                    <StackPanel MinWidth="{Binding Width, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}}" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" Opacity="0.75">
                        <TextBlock>1:50 - Option 1</TextBlock>
                        <TextBlock>Option 1</TextBlock>
                        <TextBlock>Option 1</TextBlock>
                    </StackPanel>
                </Popup>
            </StackPanel>
            <Button.Triggers>
                <EventTrigger RoutedEvent="Button.Click">
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard>
                                <BooleanAnimationUsingKeyFrames Storyboard.TargetName="taskListPopup" Storyboard.TargetProperty="IsOpen">
                                    <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True" />
                                </BooleanAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>
            </Button.Triggers>
        </Button>
    </StackPanel>
</Window>