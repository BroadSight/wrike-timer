<Window x:Class="wrike_timer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:wrike_timer"
        xmlns:lconv="clr-namespace:wrike_timer.Converters"
        mc:Ignorable="d"
        Title="Wrike Timer" WindowStyle="None" ShowInTaskbar="False" Topmost="True" Height="36" SizeToContent="Width" ResizeMode="NoResize" AllowsTransparency="True" Opacity="0.75" UseLayoutRounding="True">
    <Window.Resources>
        <Style x:Key="defaultButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="FontSize" Value="18" />
            <Setter Property="Margin" Value="3,0" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="IsEnabled" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="noTimerDisabledButtonStyle" TargetType="Button" BasedOn="{StaticResource defaultButtonStyle}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding ActiveTimers.Count, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" Value="0">
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="buttonContentStyle" TargetType="ContentControl">
            <Setter Property="Margin" Value="2,0" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <Style x:Key="buttonIconStyle" TargetType="Path">
            <Setter Property="Fill" Value="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}}" />
            <Setter Property="Width" Value="10" />
            <Setter Property="Height" Value="10" />
            <!--<Setter Property="Margin" Value="2,0" />-->
        </Style>
        <PathGeometry x:Key="playGeometry" Figures="m 1,0 0,10 8,-5 z" FillRule="Nonzero" />
        <PathGeometry x:Key="pauseGeometry" Figures="m 1,0 3,0 0,10 -3,0 z m 5,0 3,0 0,10 -3,0 z" FillRule="Nonzero" />
        <PathGeometry x:Key="dropdownGeometry" Figures="m 0,2 10,0 -5,6 z" FillRule="Nonzero" />
        <lconv:TruncateDoubleConverter x:Key="TruncateDoubleConverter" />
        <lconv:IntLessThanConverter x:Key="IntLessThanConverter" />
        <lconv:TimeSpanToHoursMinutesStringConverter x:Key="TimeSpanToHoursMinutesStringConverter" />
    </Window.Resources>
    <StackPanel Orientation="Horizontal" Margin="5,0" DataContext="{Binding ActiveTimers/, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}">
        <Grid Height="16" Width="12" Margin="3,0" Background="Transparent" Cursor="SizeAll" HorizontalAlignment="Center" VerticalAlignment="Center" MouseLeftButtonDown="dragHandle_MouseLeftButtonDown">
            <Grid.Resources>
                <Style TargetType="Ellipse">
                    <Setter Property="Height" Value="2" />
                    <Setter Property="Width" Value="2" />
                    <Setter Property="Fill" Value="Black" />
                    <Setter Property="HorizontalAlignment" Value="Center" />
                    <Setter Property="VerticalAlignment" Value="Center" />
                </Style>
            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Ellipse Grid.Row="0" Grid.Column="0" />
            <Ellipse Grid.Row="0" Grid.Column="1" />
            <Ellipse Grid.Row="1" Grid.Column="0" />
            <Ellipse Grid.Row="1" Grid.Column="1" />
            <Ellipse Grid.Row="2" Grid.Column="0" />
            <Ellipse Grid.Row="2" Grid.Column="1" />
        </Grid>
        <Button FontWeight="Medium" Click="timerToggle_Click" Style="{StaticResource noTimerDisabledButtonStyle}">
            <StackPanel Orientation="Horizontal">
                <StackPanel.Resources>
                    <Style TargetType="ContentControl" BasedOn="{StaticResource buttonContentStyle}" />
                </StackPanel.Resources>
                <ContentControl>
                    <Path>
                        <Path.Style>
                            <Style TargetType="Path" BasedOn="{StaticResource buttonIconStyle}">
                                <Setter Property="Data" Value="{StaticResource playGeometry}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsRunning, FallbackValue=False}" Value="True">
                                        <Setter Property="Data" Value="{StaticResource pauseGeometry}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Path.Style>
                    </Path>
                </ContentControl>
                <ContentControl>
                    <StackPanel Margin="2,0" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                        <TextBlock Text="{Binding Elapsed.TotalHours, StringFormat=0, FallbackValue=0, Converter={StaticResource TruncateDoubleConverter}}" />
                        <TextBlock Text=":">
                            <TextBlock.Style>
                                <Style>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsRunning}" Value="True">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard x:Name="blinkStoryboard">
                                                    <Storyboard FillBehavior="Stop">
                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Duration="0:0:1" RepeatBehavior="Forever">
                                                            <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1.0" />
                                                            <DiscreteDoubleKeyFrame KeyTime="0:0:0.5" Value="0.0" />
                                                        </DoubleAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.EnterActions>
                                            <DataTrigger.ExitActions>
                                                <StopStoryboard BeginStoryboardName="blinkStoryboard" />
                                            </DataTrigger.ExitActions>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <TextBlock Text="{Binding Elapsed.Minutes, StringFormat=00, FallbackValue=00}" />
                    </StackPanel>
                </ContentControl>
            </StackPanel>
        </Button>
        <Button>
            <StackPanel Orientation="Horizontal">
                <StackPanel.Resources>
                    <Style TargetType="ContentControl" BasedOn="{StaticResource buttonContentStyle}" />
                </StackPanel.Resources>
                <ContentControl>
                    <TextBlock Text="{Binding Path=Task.Title, FallbackValue='No Task Selected'}" />
                </ContentControl>
                <ContentControl>
                    <ContentControl.Style>
                        <Style TargetType="ContentControl" BasedOn="{StaticResource buttonContentStyle}">
                            <Setter Property="Visibility" Value="Visible" />
                            <Style.Triggers>
                                <DataTrigger Value="True" Binding="{Binding ActiveTimers.Count, FallbackValue=True, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Converter={StaticResource IntLessThanConverter}, ConverterParameter=2}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ContentControl.Style>
                    <Path VerticalAlignment="Center" Data="{StaticResource dropdownGeometry}" Style="{StaticResource buttonIconStyle}" />
                </ContentControl>
            </StackPanel>
            <Button.Triggers>
                <EventTrigger RoutedEvent="Button.Click">
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard>
                                <BooleanAnimationUsingKeyFrames Storyboard.TargetName="taskListPopup" Storyboard.TargetProperty="IsOpen">
                                    <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True" />
                                </BooleanAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>
            </Button.Triggers>
            <Button.Style>
                <Style TargetType="Button" BasedOn="{StaticResource noTimerDisabledButtonStyle}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ActiveTimers.Count, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" Value="1">
                            <Setter Property="IsEnabled" Value="False" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <Popup x:Name="taskListPopup" AllowsTransparency="True" StaysOpen="False" HorizontalOffset="12">
            <ListBox Background="{Binding Background, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                Opacity="{Binding Opacity, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                ItemsSource="{Binding ActiveTimers, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                IsSynchronizedWithCurrentItem="True" SelectionMode="Single" SelectionChanged="taskList_SelectionChanged" BorderBrush="{x:Null}" BorderThickness="0">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <StackPanel.Resources>
                                <Style TargetType="TextBlock">
                                    <Setter Property="FontSize" Value="18" />
                                </Style>
                            </StackPanel.Resources>
                            <Path VerticalAlignment="Center">
                                <Path.Style>
                                    <Style TargetType="Path" BasedOn="{StaticResource buttonIconStyle}">
                                        <Setter Property="Data" Value="{StaticResource playGeometry}" />
                                        <Setter Property="Margin" Value="5,0,2,0" />
                                        <Setter Property="Fill" Value="Black" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsRunning, FallbackValue=False}" Value="True">
                                                <Setter Property="Data" Value="{StaticResource pauseGeometry}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Path.Style>
                            </Path>
                            <TextBlock Text="{Binding Elapsed, FallbackValue=0:00, Converter={StaticResource TimeSpanToHoursMinutesStringConverter}}" Margin="4,0,7,0" FontWeight="Medium" />
                            <TextBlock Text="{Binding Task.Title}" Margin="5,0" />
                        </StackPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </Popup>
        <Menu Background="{x:Null}">
            <MenuItem Height="{Binding ActualHeight, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Menu}}}" ItemContainerStyle="{DynamicResource MainMenuItemStyle}" Template="{DynamicResource TopLevelMenuItemControlTemplate}">
                <MenuItem.Resources>
                    <ControlTemplate x:Key="TopLevelMenuItemControlTemplate" TargetType="{x:Type MenuItem}">
                        <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <Grid x:Name="Grid" VerticalAlignment="Center">
                                <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Bottom">
                                    <Border x:Name="SubMenuBorder" BorderBrush="#FF999999" BorderThickness="1" Background="#FFF0F0F0" Padding="2">
                                        <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                            <Grid x:Name="Grid1" RenderOptions.ClearTypeHint="Enabled">
                                                <Canvas x:Name="Canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                    <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=SubMenuBorder}" Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}" />
                                                </Canvas>
                                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle" />
                                            </Grid>
                                        </ScrollViewer>
                                    </Border>
                                </Popup>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                                <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None" />
                            </Trigger>
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter Property="Background" TargetName="templateRoot" Value="#3D26A0DA" />
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF26A0DA" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="#FF707070" />
                            </Trigger>
                            <Trigger Property="CanContentScroll" SourceName="SubMenuScrollViewer" Value="False">
                                <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}" />
                                <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                    <ControlTemplate x:Key="MainMenuItemControlTemplate" TargetType="{x:Type MenuItem}">
                        <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <Grid Margin="-1" MinHeight="{DynamicResource {x:Static SystemParameters.MenuHeightKey}}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="5" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="30" />
                                    <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto" />
                                    <ColumnDefinition Width="20" />
                                </Grid.ColumnDefinitions>
                                <ContentPresenter x:Name="menuHeaderContainer" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="1" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="Left" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" />
                                <TextBlock x:Name="menuGestureText" Grid.Column="3" Margin="{TemplateBinding Padding}" Opacity="0.7" Text="{TemplateBinding InputGestureText}" VerticalAlignment="Center" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter Property="Background" TargetName="templateRoot" Value="#3D26A0DA" />
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF26A0DA" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="#FF707070" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsHighlighted" Value="True" />
                                    <Condition Property="IsEnabled" Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="#0A000000" />
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#21000000" />
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                    <ControlTemplate x:Key="SubMenuHeaderItemControlTemplate" TargetType="{x:Type MenuItem}">
                        <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <Grid Margin="-1" MinHeight="{DynamicResource {x:Static SystemParameters.MenuHeightKey}}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="5" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="30" />
                                    <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto" />
                                    <ColumnDefinition Width="20" />
                                </Grid.ColumnDefinitions>
                                <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="1" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="Left" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" />
                                <TextBlock Grid.Column="3" Margin="{TemplateBinding Padding}" Opacity="0.7" Text="{TemplateBinding InputGestureText}" VerticalAlignment="Center" />
                                <Path x:Name="RightArrow" Grid.Column="4" Data="M0,0L4,3.5 0,7z" Fill="#FF212121" HorizontalAlignment="Left" Margin="10,0,0,0" VerticalAlignment="Center" />
                                <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" HorizontalOffset="-2" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Right" VerticalOffset="-3">
                                    <Border x:Name="SubMenuBorder" BorderBrush="#FF999999" BorderThickness="1" Background="#FFF0F0F0" Padding="2">
                                        <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                                <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                    <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=SubMenuBorder}" Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}" />
                                                </Canvas>
                                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle" />
                                            </Grid>
                                        </ScrollViewer>
                                    </Border>
                                </Popup>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                                <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None" />
                            </Trigger>
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter Property="Background" TargetName="templateRoot" Value="#3D26A0DA" />
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF26A0DA" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="#FF707070" />
                                <Setter Property="Fill" TargetName="RightArrow" Value="#FF707070" />
                            </Trigger>
                            <Trigger Property="CanContentScroll" SourceName="SubMenuScrollViewer" Value="False">
                                <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}" />
                                <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                    <SolidColorBrush x:Key="Menu.Static.Foreground" Color="#FF212121" />
                    <SolidColorBrush x:Key="Menu.Static.Background" Color="#FFF0F0F0" />
                    <SolidColorBrush x:Key="Menu.Static.Border" Color="#FF999999" />
                    <Style x:Key="MainMenuItemStyle" TargetType="{x:Type MenuItem}">
                        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="BorderBrush" Value="Transparent" />
                        <Setter Property="BorderThickness" Value="1" />
                        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
                        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                        <!--<Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}" />-->
                        <Setter Property="Template" Value="{StaticResource MainMenuItemControlTemplate}" />
                        <Style.Triggers>
                            <Trigger Property="Role" Value="TopLevelHeader">
                                <Setter Property="Background" Value="Transparent" />
                                <Setter Property="BorderBrush" Value="Transparent" />
                                <Setter Property="Foreground" Value="{StaticResource Menu.Static.Foreground}" />
                                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}" />
                                <Setter Property="Padding" Value="6,0" />
                            </Trigger>
                            <Trigger Property="Role" Value="TopLevelItem">
                                <Setter Property="Background" Value="{StaticResource Menu.Static.Background}" />
                                <Setter Property="BorderBrush" Value="{StaticResource Menu.Static.Border}" />
                                <Setter Property="Foreground" Value="{StaticResource Menu.Static.Foreground}" />
                                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}" />
                                <Setter Property="Padding" Value="6,0" />
                            </Trigger>
                            <Trigger Property="Role" Value="SubmenuHeader">
                                <Setter Property="Template" Value="{StaticResource SubMenuHeaderItemControlTemplate}" />
                            </Trigger>
                            <Trigger Property="Role" Value="SubmenuItem">
                                <Setter Property="Template" Value="{StaticResource MainMenuItemControlTemplate}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                    <Style x:Key="noTimerDisabledMenuItemStyle" TargetType="MenuItem" BasedOn="{StaticResource MainMenuItemStyle}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ActiveTimers.Count, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" Value="0">
                                <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                    <ControlTemplate x:Key="SeparatorTemplate" TargetType="{x:Type Separator}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Margin="0" />
                    </ControlTemplate>
                </MenuItem.Resources>
                <MenuItem.Header>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" MinHeight="18">
                        <StackPanel.Resources>
                            <Style TargetType="Ellipse">
                                <Setter Property="Margin" Value="1,0" />
                                <Setter Property="Height" Value="4" />
                                <Setter Property="Width" Value="4" />
                                <Setter Property="Fill" Value="Black" />
                            </Style>
                        </StackPanel.Resources>
                        <Ellipse />
                        <Ellipse />
                        <Ellipse />
                    </StackPanel>
                </MenuItem.Header>
                <MenuItem Header="_Reset timer" Style="{StaticResource noTimerDisabledMenuItemStyle}" />
                <Separator Template="{StaticResource SeparatorTemplate}" />
                <MenuItem Header="_Add recent task:">
                    <MenuItem Header="General 2019-06-01" />
                    <MenuItem Header="General 2019-06-01" />
                    <MenuItem Header="General 2019-06-01" />
                </MenuItem>
                <MenuItem Header="Add _your task:">
                    <MenuItem Header="General 2019-06-01" />
                    <MenuItem Header="General 2019-06-01" />
                    <MenuItem Header="General 2019-06-01" />
                </MenuItem>
                <MenuItem Header="Add task by _link" />
                <Separator Template="{StaticResource SeparatorTemplate}" />
                <MenuItem Header="Add time _entry" Style="{StaticResource noTimerDisabledMenuItemStyle}" />
                <MenuItem Header="View _timesheet" Style="{StaticResource noTimerDisabledMenuItemStyle}" />
                <Separator Template="{StaticResource SeparatorTemplate}" />
                <MenuItem Header="_Logout" />
            </MenuItem>
        </Menu>
    </StackPanel>
</Window>